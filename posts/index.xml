<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>所有文章 - 半生戎码</title>
        <link>https://luzhifang.github.io/posts/</link>
        <description>所有文章 | 半生戎码</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>54luzhifang@gmail.com (luzhifang)</managingEditor>
            <webMaster>54luzhifang@gmail.com (luzhifang)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Tue, 19 Apr 2022 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://luzhifang.github.io/posts/" rel="self" type="application/rss+xml" /><item>
    <title>Goland 插件推荐</title>
    <link>https://luzhifang.github.io/goland-plugins/</link>
    <pubDate>Tue, 19 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/goland-plugins/</guid>
    <description><![CDATA[开发效率 Eclipse keymap，eclipse 快捷键。 Translation，翻译插件。 Key Promoter X，快捷键提示。 String Manipulation，字符串处理，]]></description>
</item>
<item>
    <title>IDEA 插件推荐</title>
    <link>https://luzhifang.github.io/idea-plugins/</link>
    <pubDate>Tue, 19 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/idea-plugins/</guid>
    <description><![CDATA[Intellij IDEA 的插件主页地址是https://plugins.jetbrains.com。打开网站测速 - 站长工具找到最快的IP，配置到hosts文件中]]></description>
</item>
<item>
    <title>VSCODE 插件推荐</title>
    <link>https://luzhifang.github.io/vscode-plugins/</link>
    <pubDate>Tue, 19 Apr 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/vscode-plugins/</guid>
    <description><![CDATA[开发效率 EditorConfig for VS Code，代码格式统一。 vscode-json，操作美化 json。 快捷键 cmd+alt+v，验证 cmd+alt+b，格式化 cm]]></description>
</item>
<item>
    <title>Windows11 安装 Linux 子系统</title>
    <link>https://luzhifang.github.io/wsl/</link>
    <pubDate>Sat, 19 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/wsl/</guid>
    <description><![CDATA[启用相关功能 首先搜索【启用或关闭 Winsows 功能】 然后勾选【适用于 linux 的 Windows 子系统】和【虚拟平台】 下载安装 Linux 内核更新包 wsl_update_x64.msi 设置默认版本为 WSL 2 1 wsl --set-default-version 2 安装 Linux 最]]></description>
</item>
<item>
    <title>Windows11 优化</title>
    <link>https://luzhifang.github.io/win11-optimization/</link>
    <pubDate>Sat, 19 Mar 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/win11-optimization/</guid>
    <description><![CDATA[关闭系统透明效果，设置 -&gt; 个性化 -&gt; 颜色 视觉效果调整为最佳性能，高级系统设置 -&gt; 性能 -&gt; 设置 -&gt; 调整为最佳性能 禁用游戏模式，设置 -&gt; 游戏 -&gt; 游戏模式 关闭启]]></description>
</item>
<item>
    <title>Docker Compose</title>
    <link>https://luzhifang.github.io/docker-compose/</link>
    <pubDate>Mon, 28 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/docker-compose/</guid>
    <description><![CDATA[Compose 简介 Compose 是用于定义和运行多容器 Docker 应用程序的工具。通过 Compose，您可以使用 YML 文件来配置应用程序需要的所有服务。然后，使用一个命令，就可以]]></description>
</item>
<item>
    <title>Docker Dockerfile</title>
    <link>https://luzhifang.github.io/dokcer-dockerfile/</link>
    <pubDate>Mon, 28 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/dokcer-dockerfile/</guid>
    <description><![CDATA[什么是 Dockerfile Dockerfile 是一个文本文件，记录了镜像构建的所有步骤。 Dockerfile 构建镜像的过程 从 base 镜像运行一个容器。 执行一条指令，对容器做修改。 执行类似 docker commit 的操作，生]]></description>
</item>
<item>
    <title>Docker 常用命令</title>
    <link>https://luzhifang.github.io/docker-command/</link>
    <pubDate>Sat, 26 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/docker-command/</guid>
    <description><![CDATA[Dcoker 基本概念 Docker 包括三个基本概念： 镜像（Image）：Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外]]></description>
</item>
<item>
    <title>Docker 实现原理</title>
    <link>https://luzhifang.github.io/docker-implementation/</link>
    <pubDate>Tue, 22 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/docker-implementation/</guid>
    <description><![CDATA[容器的实现原理 从本质上，容器其实就是一种沙盒技术。就好像把应用隔离在一个盒子内，使其运行。因为有了盒子边界的存在，应用于应用之间不会相互干扰]]></description>
</item>
<item>
    <title>Ubuntu 安装 Docker</title>
    <link>https://luzhifang.github.io/docker-install/</link>
    <pubDate>Sat, 19 Feb 2022 00:00:00 &#43;0000</pubDate>
    <author>Jeff</author>
    <guid>https://luzhifang.github.io/docker-install/</guid>
    <description><![CDATA[使用官方安装脚本自动安装 注意：脚本安装适合在测试和开发环境使用。 安装命令如下： 1 2 curl -fsSL get.docker.com -o get-docker.sh sh get-docker.sh --mirror Aliyun 也可以使用国内 daocloud 一键安装命令： 1 curl -sSL https://get.daocloud.io/docker |]]></description>
</item>
</channel>
</rss>
